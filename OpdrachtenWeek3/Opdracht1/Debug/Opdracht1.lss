
Opdracht1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000007c4  00000838  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000842  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000008dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cab  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a13  00000000  00000000  000015ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000057b  00000000  00000000  00002012  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  00002590  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000492  00000000  00000000  0000267c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002cd  00000000  00000000  00002b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002ddb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ec       	ldi	r30, 0xC4	; 196
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	75 d0       	rcall	.+234    	; 0x19e <main>
  b4:	85 c3       	rjmp	.+1802   	; 0x7c0 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <switch_E>:
	PORTC = (byte<<4);
	PORTC &= ~(1<<RS);
	switch_E();
}

void set_cursor(int position) {
  b8:	85 b3       	in	r24, 0x15	; 21
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	85 bb       	out	0x15, r24	; 21
  be:	8f ec       	ldi	r24, 0xCF	; 207
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <switch_E+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <switch_E+0x10>
  c8:	00 00       	nop
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	87 7f       	andi	r24, 0xF7	; 247
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	8f ec       	ldi	r24, 0xCF	; 207
  d2:	97 e0       	ldi	r25, 0x07	; 7
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <switch_E+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <switch_E+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <lcd_write_data>:
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
  e2:	85 bb       	out	0x15, r24	; 21
  e4:	85 b3       	in	r24, 0x15	; 21
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	85 bb       	out	0x15, r24	; 21
  ea:	e6 df       	rcall	.-52     	; 0xb8 <switch_E>
  ec:	c2 95       	swap	r28
  ee:	c0 7f       	andi	r28, 0xF0	; 240
  f0:	c5 bb       	out	0x15, r28	; 21
  f2:	85 b3       	in	r24, 0x15	; 21
  f4:	84 60       	ori	r24, 0x04	; 4
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	df df       	rcall	.-66     	; 0xb8 <switch_E>
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <display_text>:
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	ec 01       	movw	r28, r24
 104:	02 c0       	rjmp	.+4      	; 0x10a <display_text+0xc>
 106:	21 96       	adiw	r28, 0x01	; 1
 108:	ea df       	rcall	.-44     	; 0xde <lcd_write_data>
 10a:	88 81       	ld	r24, Y
 10c:	81 11       	cpse	r24, r1
 10e:	fb cf       	rjmp	.-10     	; 0x106 <display_text+0x8>
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <lcd_write_command>:
 116:	cf 93       	push	r28
 118:	c8 2f       	mov	r28, r24
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	85 b3       	in	r24, 0x15	; 21
 11e:	8b 7f       	andi	r24, 0xFB	; 251
 120:	85 bb       	out	0x15, r24	; 21
 122:	ca df       	rcall	.-108    	; 0xb8 <switch_E>
 124:	c2 95       	swap	r28
 126:	c0 7f       	andi	r28, 0xF0	; 240
 128:	c5 bb       	out	0x15, r28	; 21
 12a:	85 b3       	in	r24, 0x15	; 21
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	85 bb       	out	0x15, r24	; 21
 130:	c3 df       	rcall	.-122    	; 0xb8 <switch_E>
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <clear>:
	
}

void clear(){
	lcd_write_command(0x01);
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	ee df       	rcall	.-36     	; 0x116 <lcd_write_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13a:	8f e9       	ldi	r24, 0x9F	; 159
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <clear+0x8>
 142:	00 c0       	rjmp	.+0      	; 0x144 <clear+0xe>
 144:	00 00       	nop
	_delay_ms(2);
	lcd_write_command(0x80);
 146:	80 e8       	ldi	r24, 0x80	; 128
 148:	e6 cf       	rjmp	.-52     	; 0x116 <lcd_write_command>
 14a:	08 95       	ret

0000014c <init>:
}

void init() {
 14c:	cf 93       	push	r28
	// See table 13 from the HD44780U datasheet.
	DDRC = 0xFF;
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 152:	15 ba       	out	0x15, r1	; 21
	
	// Step 2 Function set
	PORTC = 0x20;
 154:	c0 e2       	ldi	r28, 0x20	; 32
 156:	c5 bb       	out	0x15, r28	; 21
	switch_E();
 158:	af df       	rcall	.-162    	; 0xb8 <switch_E>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
	switch_E();
 15a:	c5 bb       	out	0x15, r28	; 21
 15c:	ad df       	rcall	.-166    	; 0xb8 <switch_E>
	PORTC = 0x80;
 15e:	80 e8       	ldi	r24, 0x80	; 128
	switch_E();
 160:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 162:	aa df       	rcall	.-172    	; 0xb8 <switch_E>
	switch_E();
 164:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 166:	a8 df       	rcall	.-176    	; 0xb8 <switch_E>
	switch_E();
 168:	80 ef       	ldi	r24, 0xF0	; 240

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 16a:	85 bb       	out	0x15, r24	; 21
	switch_E();
 16c:	a5 df       	rcall	.-182    	; 0xb8 <switch_E>
	PORTC = 0x60;
 16e:	15 ba       	out	0x15, r1	; 21
 170:	a3 df       	rcall	.-186    	; 0xb8 <switch_E>
	switch_E();
 172:	80 e6       	ldi	r24, 0x60	; 96
 174:	85 bb       	out	0x15, r24	; 21
	
	// Set cursor to position 0 on first row.
	lcd_write_command(0x02);
 176:	a0 df       	rcall	.-192    	; 0xb8 <switch_E>
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	cd df       	rcall	.-102    	; 0x116 <lcd_write_command>
 17c:	cf 91       	pop	r28
 17e:	08 95       	ret

00000180 <wait>:
#include "LCD/LCD.h"
#include <stdio.h>


void wait( int ms ) {
	for (int tms=0; tms<ms; tms++) {
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	08 c0       	rjmp	.+16     	; 0x196 <wait+0x16>
 186:	ef ec       	ldi	r30, 0xCF	; 207
 188:	f7 e0       	ldi	r31, 0x07	; 7
 18a:	31 97       	sbiw	r30, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <wait+0xa>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <wait+0x10>
 190:	00 00       	nop
 192:	2f 5f       	subi	r18, 0xFF	; 255
 194:	3f 4f       	sbci	r19, 0xFF	; 255
 196:	28 17       	cp	r18, r24
 198:	39 07       	cpc	r19, r25
 19a:	ac f3       	brlt	.-22     	; 0x186 <wait+0x6>
		_delay_ms( 1 );			// library function (max 30 ms at 8MHz)
	}
}
 19c:	08 95       	ret

0000019e <main>:

int main(void)
{
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	cd b7       	in	r28, 0x3d	; 61
 1a4:	de b7       	in	r29, 0x3e	; 62
 1a6:	c0 55       	subi	r28, 0x50	; 80
 1a8:	d1 09       	sbc	r29, r1
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	f8 94       	cli
 1ae:	de bf       	out	0x3e, r29	; 62
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	cd bf       	out	0x3d, r28	; 61
	//Setting up lcd
	init();
 1b4:	cb df       	rcall	.-106    	; 0x14c <init>
	
	wait(20);
 1b6:	84 e1       	ldi	r24, 0x14	; 20
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	e2 df       	rcall	.-60     	; 0x180 <wait>
	//Setting up counter
	DDRD = ~(1<<7);
 1bc:	8f e7       	ldi	r24, 0x7F	; 127
 1be:	81 bb       	out	0x11, r24	; 17
	TCCR2 = 0b00000111;		// counting via PD7, rising edge
 1c0:	87 e0       	ldi	r24, 0x07	; 7
 1c2:	85 bd       	out	0x25, r24	; 37
	
	unsigned int previous = 0;
 1c4:	00 e0       	ldi	r16, 0x00	; 0
 1c6:	10 e0       	ldi	r17, 0x00	; 0
	
    /* Replace with your application code */
    while (1) 
    {	
		if (previous != TCNT2){
 1c8:	84 b5       	in	r24, 0x24	; 36
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	08 17       	cp	r16, r24
 1ce:	19 07       	cpc	r17, r25
			//Clearing display
			clear();
 1d0:	b1 f0       	breq	.+44     	; 0x1fe <main+0x60>
 1d2:	b1 df       	rcall	.-158    	; 0x136 <clear>
		
			//Casting to a string
			char str[80];
			sprintf(str, "Count: %d", TCNT2);
 1d4:	84 b5       	in	r24, 0x24	; 36
 1d6:	1f 92       	push	r1
 1d8:	8f 93       	push	r24
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	8e 01       	movw	r16, r28
 1e4:	0f 5f       	subi	r16, 0xFF	; 255
 1e6:	1f 4f       	sbci	r17, 0xFF	; 255
 1e8:	1f 93       	push	r17
 1ea:	0f 93       	push	r16
			display_text(str);
 1ec:	0e d0       	rcall	.+28     	; 0x20a <sprintf>
 1ee:	c8 01       	movw	r24, r16
 1f0:	86 df       	rcall	.-244    	; 0xfe <display_text>
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
			
	
		}
		previous = TCNT2;
 1fc:	0f 90       	pop	r0
 1fe:	04 b5       	in	r16, 0x24	; 36
		wait(10);
 200:	10 e0       	ldi	r17, 0x00	; 0
 202:	8a e0       	ldi	r24, 0x0A	; 10
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	bc df       	rcall	.-136    	; 0x180 <wait>
		
    }
 208:	df cf       	rjmp	.-66     	; 0x1c8 <main+0x2a>

0000020a <sprintf>:
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	cd b7       	in	r28, 0x3d	; 61
 214:	de b7       	in	r29, 0x3e	; 62
 216:	2e 97       	sbiw	r28, 0x0e	; 14
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
 222:	0d 89       	ldd	r16, Y+21	; 0x15
 224:	1e 89       	ldd	r17, Y+22	; 0x16
 226:	86 e0       	ldi	r24, 0x06	; 6
 228:	8c 83       	std	Y+4, r24	; 0x04
 22a:	1a 83       	std	Y+2, r17	; 0x02
 22c:	09 83       	std	Y+1, r16	; 0x01
 22e:	8f ef       	ldi	r24, 0xFF	; 255
 230:	9f e7       	ldi	r25, 0x7F	; 127
 232:	9e 83       	std	Y+6, r25	; 0x06
 234:	8d 83       	std	Y+5, r24	; 0x05
 236:	ae 01       	movw	r20, r28
 238:	47 5e       	subi	r20, 0xE7	; 231
 23a:	5f 4f       	sbci	r21, 0xFF	; 255
 23c:	6f 89       	ldd	r22, Y+23	; 0x17
 23e:	78 8d       	ldd	r23, Y+24	; 0x18
 240:	ce 01       	movw	r24, r28
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	10 d0       	rcall	.+32     	; 0x266 <vfprintf>
 246:	ef 81       	ldd	r30, Y+7	; 0x07
 248:	f8 85       	ldd	r31, Y+8	; 0x08
 24a:	e0 0f       	add	r30, r16
 24c:	f1 1f       	adc	r31, r17
 24e:	10 82       	st	Z, r1
 250:	2e 96       	adiw	r28, 0x0e	; 14
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	f8 94       	cli
 256:	de bf       	out	0x3e, r29	; 62
 258:	0f be       	out	0x3f, r0	; 63
 25a:	cd bf       	out	0x3d, r28	; 61
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	1f 91       	pop	r17
 262:	0f 91       	pop	r16
 264:	08 95       	ret

00000266 <vfprintf>:
 266:	2f 92       	push	r2
 268:	3f 92       	push	r3
 26a:	4f 92       	push	r4
 26c:	5f 92       	push	r5
 26e:	6f 92       	push	r6
 270:	7f 92       	push	r7
 272:	8f 92       	push	r8
 274:	9f 92       	push	r9
 276:	af 92       	push	r10
 278:	bf 92       	push	r11
 27a:	cf 92       	push	r12
 27c:	df 92       	push	r13
 27e:	ef 92       	push	r14
 280:	ff 92       	push	r15
 282:	0f 93       	push	r16
 284:	1f 93       	push	r17
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
 28e:	2b 97       	sbiw	r28, 0x0b	; 11
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	f8 94       	cli
 294:	de bf       	out	0x3e, r29	; 62
 296:	0f be       	out	0x3f, r0	; 63
 298:	cd bf       	out	0x3d, r28	; 61
 29a:	6c 01       	movw	r12, r24
 29c:	7b 01       	movw	r14, r22
 29e:	8a 01       	movw	r16, r20
 2a0:	fc 01       	movw	r30, r24
 2a2:	17 82       	std	Z+7, r1	; 0x07
 2a4:	16 82       	std	Z+6, r1	; 0x06
 2a6:	83 81       	ldd	r24, Z+3	; 0x03
 2a8:	81 ff       	sbrs	r24, 1
 2aa:	bf c1       	rjmp	.+894    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 2ac:	ce 01       	movw	r24, r28
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	3c 01       	movw	r6, r24
 2b2:	f6 01       	movw	r30, r12
 2b4:	93 81       	ldd	r25, Z+3	; 0x03
 2b6:	f7 01       	movw	r30, r14
 2b8:	93 fd       	sbrc	r25, 3
 2ba:	85 91       	lpm	r24, Z+
 2bc:	93 ff       	sbrs	r25, 3
 2be:	81 91       	ld	r24, Z+
 2c0:	7f 01       	movw	r14, r30
 2c2:	88 23       	and	r24, r24
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <vfprintf+0x62>
 2c6:	ad c1       	rjmp	.+858    	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 2c8:	85 32       	cpi	r24, 0x25	; 37
 2ca:	39 f4       	brne	.+14     	; 0x2da <vfprintf+0x74>
 2cc:	93 fd       	sbrc	r25, 3
 2ce:	85 91       	lpm	r24, Z+
 2d0:	93 ff       	sbrs	r25, 3
 2d2:	81 91       	ld	r24, Z+
 2d4:	7f 01       	movw	r14, r30
 2d6:	85 32       	cpi	r24, 0x25	; 37
 2d8:	21 f4       	brne	.+8      	; 0x2e2 <vfprintf+0x7c>
 2da:	b6 01       	movw	r22, r12
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	d6 d1       	rcall	.+940    	; 0x68c <fputc>
 2e0:	e8 cf       	rjmp	.-48     	; 0x2b2 <vfprintf+0x4c>
 2e2:	91 2c       	mov	r9, r1
 2e4:	21 2c       	mov	r2, r1
 2e6:	31 2c       	mov	r3, r1
 2e8:	ff e1       	ldi	r31, 0x1F	; 31
 2ea:	f3 15       	cp	r31, r3
 2ec:	d8 f0       	brcs	.+54     	; 0x324 <vfprintf+0xbe>
 2ee:	8b 32       	cpi	r24, 0x2B	; 43
 2f0:	79 f0       	breq	.+30     	; 0x310 <vfprintf+0xaa>
 2f2:	38 f4       	brcc	.+14     	; 0x302 <vfprintf+0x9c>
 2f4:	80 32       	cpi	r24, 0x20	; 32
 2f6:	79 f0       	breq	.+30     	; 0x316 <vfprintf+0xb0>
 2f8:	83 32       	cpi	r24, 0x23	; 35
 2fa:	a1 f4       	brne	.+40     	; 0x324 <vfprintf+0xbe>
 2fc:	23 2d       	mov	r18, r3
 2fe:	20 61       	ori	r18, 0x10	; 16
 300:	1d c0       	rjmp	.+58     	; 0x33c <vfprintf+0xd6>
 302:	8d 32       	cpi	r24, 0x2D	; 45
 304:	61 f0       	breq	.+24     	; 0x31e <vfprintf+0xb8>
 306:	80 33       	cpi	r24, 0x30	; 48
 308:	69 f4       	brne	.+26     	; 0x324 <vfprintf+0xbe>
 30a:	23 2d       	mov	r18, r3
 30c:	21 60       	ori	r18, 0x01	; 1
 30e:	16 c0       	rjmp	.+44     	; 0x33c <vfprintf+0xd6>
 310:	83 2d       	mov	r24, r3
 312:	82 60       	ori	r24, 0x02	; 2
 314:	38 2e       	mov	r3, r24
 316:	e3 2d       	mov	r30, r3
 318:	e4 60       	ori	r30, 0x04	; 4
 31a:	3e 2e       	mov	r3, r30
 31c:	2a c0       	rjmp	.+84     	; 0x372 <vfprintf+0x10c>
 31e:	f3 2d       	mov	r31, r3
 320:	f8 60       	ori	r31, 0x08	; 8
 322:	1d c0       	rjmp	.+58     	; 0x35e <vfprintf+0xf8>
 324:	37 fc       	sbrc	r3, 7
 326:	2d c0       	rjmp	.+90     	; 0x382 <vfprintf+0x11c>
 328:	20 ed       	ldi	r18, 0xD0	; 208
 32a:	28 0f       	add	r18, r24
 32c:	2a 30       	cpi	r18, 0x0A	; 10
 32e:	40 f0       	brcs	.+16     	; 0x340 <vfprintf+0xda>
 330:	8e 32       	cpi	r24, 0x2E	; 46
 332:	b9 f4       	brne	.+46     	; 0x362 <vfprintf+0xfc>
 334:	36 fc       	sbrc	r3, 6
 336:	75 c1       	rjmp	.+746    	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 338:	23 2d       	mov	r18, r3
 33a:	20 64       	ori	r18, 0x40	; 64
 33c:	32 2e       	mov	r3, r18
 33e:	19 c0       	rjmp	.+50     	; 0x372 <vfprintf+0x10c>
 340:	36 fe       	sbrs	r3, 6
 342:	06 c0       	rjmp	.+12     	; 0x350 <vfprintf+0xea>
 344:	8a e0       	ldi	r24, 0x0A	; 10
 346:	98 9e       	mul	r9, r24
 348:	20 0d       	add	r18, r0
 34a:	11 24       	eor	r1, r1
 34c:	92 2e       	mov	r9, r18
 34e:	11 c0       	rjmp	.+34     	; 0x372 <vfprintf+0x10c>
 350:	ea e0       	ldi	r30, 0x0A	; 10
 352:	2e 9e       	mul	r2, r30
 354:	20 0d       	add	r18, r0
 356:	11 24       	eor	r1, r1
 358:	22 2e       	mov	r2, r18
 35a:	f3 2d       	mov	r31, r3
 35c:	f0 62       	ori	r31, 0x20	; 32
 35e:	3f 2e       	mov	r3, r31
 360:	08 c0       	rjmp	.+16     	; 0x372 <vfprintf+0x10c>
 362:	8c 36       	cpi	r24, 0x6C	; 108
 364:	21 f4       	brne	.+8      	; 0x36e <vfprintf+0x108>
 366:	83 2d       	mov	r24, r3
 368:	80 68       	ori	r24, 0x80	; 128
 36a:	38 2e       	mov	r3, r24
 36c:	02 c0       	rjmp	.+4      	; 0x372 <vfprintf+0x10c>
 36e:	88 36       	cpi	r24, 0x68	; 104
 370:	41 f4       	brne	.+16     	; 0x382 <vfprintf+0x11c>
 372:	f7 01       	movw	r30, r14
 374:	93 fd       	sbrc	r25, 3
 376:	85 91       	lpm	r24, Z+
 378:	93 ff       	sbrs	r25, 3
 37a:	81 91       	ld	r24, Z+
 37c:	7f 01       	movw	r14, r30
 37e:	81 11       	cpse	r24, r1
 380:	b3 cf       	rjmp	.-154    	; 0x2e8 <vfprintf+0x82>
 382:	98 2f       	mov	r25, r24
 384:	9f 7d       	andi	r25, 0xDF	; 223
 386:	95 54       	subi	r25, 0x45	; 69
 388:	93 30       	cpi	r25, 0x03	; 3
 38a:	28 f4       	brcc	.+10     	; 0x396 <vfprintf+0x130>
 38c:	0c 5f       	subi	r16, 0xFC	; 252
 38e:	1f 4f       	sbci	r17, 0xFF	; 255
 390:	9f e3       	ldi	r25, 0x3F	; 63
 392:	99 83       	std	Y+1, r25	; 0x01
 394:	0d c0       	rjmp	.+26     	; 0x3b0 <vfprintf+0x14a>
 396:	83 36       	cpi	r24, 0x63	; 99
 398:	31 f0       	breq	.+12     	; 0x3a6 <vfprintf+0x140>
 39a:	83 37       	cpi	r24, 0x73	; 115
 39c:	71 f0       	breq	.+28     	; 0x3ba <vfprintf+0x154>
 39e:	83 35       	cpi	r24, 0x53	; 83
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <vfprintf+0x13e>
 3a2:	55 c0       	rjmp	.+170    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3a4:	20 c0       	rjmp	.+64     	; 0x3e6 <vfprintf+0x180>
 3a6:	f8 01       	movw	r30, r16
 3a8:	80 81       	ld	r24, Z
 3aa:	89 83       	std	Y+1, r24	; 0x01
 3ac:	0e 5f       	subi	r16, 0xFE	; 254
 3ae:	1f 4f       	sbci	r17, 0xFF	; 255
 3b0:	88 24       	eor	r8, r8
 3b2:	83 94       	inc	r8
 3b4:	91 2c       	mov	r9, r1
 3b6:	53 01       	movw	r10, r6
 3b8:	12 c0       	rjmp	.+36     	; 0x3de <vfprintf+0x178>
 3ba:	28 01       	movw	r4, r16
 3bc:	f2 e0       	ldi	r31, 0x02	; 2
 3be:	4f 0e       	add	r4, r31
 3c0:	51 1c       	adc	r5, r1
 3c2:	f8 01       	movw	r30, r16
 3c4:	a0 80       	ld	r10, Z
 3c6:	b1 80       	ldd	r11, Z+1	; 0x01
 3c8:	36 fe       	sbrs	r3, 6
 3ca:	03 c0       	rjmp	.+6      	; 0x3d2 <vfprintf+0x16c>
 3cc:	69 2d       	mov	r22, r9
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <vfprintf+0x170>
 3d2:	6f ef       	ldi	r22, 0xFF	; 255
 3d4:	7f ef       	ldi	r23, 0xFF	; 255
 3d6:	c5 01       	movw	r24, r10
 3d8:	4e d1       	rcall	.+668    	; 0x676 <strnlen>
 3da:	4c 01       	movw	r8, r24
 3dc:	82 01       	movw	r16, r4
 3de:	f3 2d       	mov	r31, r3
 3e0:	ff 77       	andi	r31, 0x7F	; 127
 3e2:	3f 2e       	mov	r3, r31
 3e4:	15 c0       	rjmp	.+42     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e6:	28 01       	movw	r4, r16
 3e8:	22 e0       	ldi	r18, 0x02	; 2
 3ea:	42 0e       	add	r4, r18
 3ec:	51 1c       	adc	r5, r1
 3ee:	f8 01       	movw	r30, r16
 3f0:	a0 80       	ld	r10, Z
 3f2:	b1 80       	ldd	r11, Z+1	; 0x01
 3f4:	36 fe       	sbrs	r3, 6
 3f6:	03 c0       	rjmp	.+6      	; 0x3fe <vfprintf+0x198>
 3f8:	69 2d       	mov	r22, r9
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	6f ef       	ldi	r22, 0xFF	; 255
 400:	7f ef       	ldi	r23, 0xFF	; 255
 402:	c5 01       	movw	r24, r10
 404:	2d d1       	rcall	.+602    	; 0x660 <strnlen_P>
 406:	4c 01       	movw	r8, r24
 408:	f3 2d       	mov	r31, r3
 40a:	f0 68       	ori	r31, 0x80	; 128
 40c:	3f 2e       	mov	r3, r31
 40e:	82 01       	movw	r16, r4
 410:	33 fc       	sbrc	r3, 3
 412:	19 c0       	rjmp	.+50     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 414:	82 2d       	mov	r24, r2
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	88 16       	cp	r8, r24
 41a:	99 06       	cpc	r9, r25
 41c:	a0 f4       	brcc	.+40     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 41e:	b6 01       	movw	r22, r12
 420:	80 e2       	ldi	r24, 0x20	; 32
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	33 d1       	rcall	.+614    	; 0x68c <fputc>
 426:	2a 94       	dec	r2
 428:	f5 cf       	rjmp	.-22     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 42a:	f5 01       	movw	r30, r10
 42c:	37 fc       	sbrc	r3, 7
 42e:	85 91       	lpm	r24, Z+
 430:	37 fe       	sbrs	r3, 7
 432:	81 91       	ld	r24, Z+
 434:	5f 01       	movw	r10, r30
 436:	b6 01       	movw	r22, r12
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	28 d1       	rcall	.+592    	; 0x68c <fputc>
 43c:	21 10       	cpse	r2, r1
 43e:	2a 94       	dec	r2
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	82 1a       	sub	r8, r18
 444:	91 08       	sbc	r9, r1
 446:	81 14       	cp	r8, r1
 448:	91 04       	cpc	r9, r1
 44a:	79 f7       	brne	.-34     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 44c:	e1 c0       	rjmp	.+450    	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 44e:	84 36       	cpi	r24, 0x64	; 100
 450:	11 f0       	breq	.+4      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 452:	89 36       	cpi	r24, 0x69	; 105
 454:	39 f5       	brne	.+78     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 456:	f8 01       	movw	r30, r16
 458:	37 fe       	sbrs	r3, 7
 45a:	07 c0       	rjmp	.+14     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 45c:	60 81       	ld	r22, Z
 45e:	71 81       	ldd	r23, Z+1	; 0x01
 460:	82 81       	ldd	r24, Z+2	; 0x02
 462:	93 81       	ldd	r25, Z+3	; 0x03
 464:	0c 5f       	subi	r16, 0xFC	; 252
 466:	1f 4f       	sbci	r17, 0xFF	; 255
 468:	08 c0       	rjmp	.+16     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46a:	60 81       	ld	r22, Z
 46c:	71 81       	ldd	r23, Z+1	; 0x01
 46e:	07 2e       	mov	r0, r23
 470:	00 0c       	add	r0, r0
 472:	88 0b       	sbc	r24, r24
 474:	99 0b       	sbc	r25, r25
 476:	0e 5f       	subi	r16, 0xFE	; 254
 478:	1f 4f       	sbci	r17, 0xFF	; 255
 47a:	f3 2d       	mov	r31, r3
 47c:	ff 76       	andi	r31, 0x6F	; 111
 47e:	3f 2e       	mov	r3, r31
 480:	97 ff       	sbrs	r25, 7
 482:	09 c0       	rjmp	.+18     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 484:	90 95       	com	r25
 486:	80 95       	com	r24
 488:	70 95       	com	r23
 48a:	61 95       	neg	r22
 48c:	7f 4f       	sbci	r23, 0xFF	; 255
 48e:	8f 4f       	sbci	r24, 0xFF	; 255
 490:	9f 4f       	sbci	r25, 0xFF	; 255
 492:	f0 68       	ori	r31, 0x80	; 128
 494:	3f 2e       	mov	r3, r31
 496:	2a e0       	ldi	r18, 0x0A	; 10
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	a3 01       	movw	r20, r6
 49c:	33 d1       	rcall	.+614    	; 0x704 <__ultoa_invert>
 49e:	88 2e       	mov	r8, r24
 4a0:	86 18       	sub	r8, r6
 4a2:	44 c0       	rjmp	.+136    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 4a4:	85 37       	cpi	r24, 0x75	; 117
 4a6:	31 f4       	brne	.+12     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a8:	23 2d       	mov	r18, r3
 4aa:	2f 7e       	andi	r18, 0xEF	; 239
 4ac:	b2 2e       	mov	r11, r18
 4ae:	2a e0       	ldi	r18, 0x0A	; 10
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	25 c0       	rjmp	.+74     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4b4:	93 2d       	mov	r25, r3
 4b6:	99 7f       	andi	r25, 0xF9	; 249
 4b8:	b9 2e       	mov	r11, r25
 4ba:	8f 36       	cpi	r24, 0x6F	; 111
 4bc:	c1 f0       	breq	.+48     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4be:	18 f4       	brcc	.+6      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c0:	88 35       	cpi	r24, 0x58	; 88
 4c2:	79 f0       	breq	.+30     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4c4:	ae c0       	rjmp	.+348    	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 4c6:	80 37       	cpi	r24, 0x70	; 112
 4c8:	19 f0       	breq	.+6      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4ca:	88 37       	cpi	r24, 0x78	; 120
 4cc:	21 f0       	breq	.+8      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ce:	a9 c0       	rjmp	.+338    	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 4d0:	e9 2f       	mov	r30, r25
 4d2:	e0 61       	ori	r30, 0x10	; 16
 4d4:	be 2e       	mov	r11, r30
 4d6:	b4 fe       	sbrs	r11, 4
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4da:	fb 2d       	mov	r31, r11
 4dc:	f4 60       	ori	r31, 0x04	; 4
 4de:	bf 2e       	mov	r11, r31
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e2:	34 fe       	sbrs	r3, 4
 4e4:	0a c0       	rjmp	.+20     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4e6:	29 2f       	mov	r18, r25
 4e8:	26 60       	ori	r18, 0x06	; 6
 4ea:	b2 2e       	mov	r11, r18
 4ec:	06 c0       	rjmp	.+12     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ee:	28 e0       	ldi	r18, 0x08	; 8
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	05 c0       	rjmp	.+10     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f4:	20 e1       	ldi	r18, 0x10	; 16
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fa:	20 e1       	ldi	r18, 0x10	; 16
 4fc:	32 e0       	ldi	r19, 0x02	; 2
 4fe:	f8 01       	movw	r30, r16
 500:	b7 fe       	sbrs	r11, 7
 502:	07 c0       	rjmp	.+14     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 504:	60 81       	ld	r22, Z
 506:	71 81       	ldd	r23, Z+1	; 0x01
 508:	82 81       	ldd	r24, Z+2	; 0x02
 50a:	93 81       	ldd	r25, Z+3	; 0x03
 50c:	0c 5f       	subi	r16, 0xFC	; 252
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	06 c0       	rjmp	.+12     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 512:	60 81       	ld	r22, Z
 514:	71 81       	ldd	r23, Z+1	; 0x01
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 5f       	subi	r16, 0xFE	; 254
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	a3 01       	movw	r20, r6
 520:	f1 d0       	rcall	.+482    	; 0x704 <__ultoa_invert>
 522:	88 2e       	mov	r8, r24
 524:	86 18       	sub	r8, r6
 526:	fb 2d       	mov	r31, r11
 528:	ff 77       	andi	r31, 0x7F	; 127
 52a:	3f 2e       	mov	r3, r31
 52c:	36 fe       	sbrs	r3, 6
 52e:	0d c0       	rjmp	.+26     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 530:	23 2d       	mov	r18, r3
 532:	2e 7f       	andi	r18, 0xFE	; 254
 534:	a2 2e       	mov	r10, r18
 536:	89 14       	cp	r8, r9
 538:	58 f4       	brcc	.+22     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 53a:	34 fe       	sbrs	r3, 4
 53c:	0b c0       	rjmp	.+22     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 53e:	32 fc       	sbrc	r3, 2
 540:	09 c0       	rjmp	.+18     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 542:	83 2d       	mov	r24, r3
 544:	8e 7e       	andi	r24, 0xEE	; 238
 546:	a8 2e       	mov	r10, r24
 548:	05 c0       	rjmp	.+10     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 54a:	b8 2c       	mov	r11, r8
 54c:	a3 2c       	mov	r10, r3
 54e:	03 c0       	rjmp	.+6      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 550:	b8 2c       	mov	r11, r8
 552:	01 c0       	rjmp	.+2      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 554:	b9 2c       	mov	r11, r9
 556:	a4 fe       	sbrs	r10, 4
 558:	0f c0       	rjmp	.+30     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 55a:	fe 01       	movw	r30, r28
 55c:	e8 0d       	add	r30, r8
 55e:	f1 1d       	adc	r31, r1
 560:	80 81       	ld	r24, Z
 562:	80 33       	cpi	r24, 0x30	; 48
 564:	21 f4       	brne	.+8      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 566:	9a 2d       	mov	r25, r10
 568:	99 7e       	andi	r25, 0xE9	; 233
 56a:	a9 2e       	mov	r10, r25
 56c:	09 c0       	rjmp	.+18     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 56e:	a2 fe       	sbrs	r10, 2
 570:	06 c0       	rjmp	.+12     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 572:	b3 94       	inc	r11
 574:	b3 94       	inc	r11
 576:	04 c0       	rjmp	.+8      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 578:	8a 2d       	mov	r24, r10
 57a:	86 78       	andi	r24, 0x86	; 134
 57c:	09 f0       	breq	.+2      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57e:	b3 94       	inc	r11
 580:	a3 fc       	sbrc	r10, 3
 582:	10 c0       	rjmp	.+32     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 584:	a0 fe       	sbrs	r10, 0
 586:	06 c0       	rjmp	.+12     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 588:	b2 14       	cp	r11, r2
 58a:	80 f4       	brcc	.+32     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 58c:	28 0c       	add	r2, r8
 58e:	92 2c       	mov	r9, r2
 590:	9b 18       	sub	r9, r11
 592:	0d c0       	rjmp	.+26     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 594:	b2 14       	cp	r11, r2
 596:	58 f4       	brcc	.+22     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 598:	b6 01       	movw	r22, r12
 59a:	80 e2       	ldi	r24, 0x20	; 32
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	76 d0       	rcall	.+236    	; 0x68c <fputc>
 5a0:	b3 94       	inc	r11
 5a2:	f8 cf       	rjmp	.-16     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 5a4:	b2 14       	cp	r11, r2
 5a6:	18 f4       	brcc	.+6      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a8:	2b 18       	sub	r2, r11
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ac:	98 2c       	mov	r9, r8
 5ae:	21 2c       	mov	r2, r1
 5b0:	a4 fe       	sbrs	r10, 4
 5b2:	0f c0       	rjmp	.+30     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5b4:	b6 01       	movw	r22, r12
 5b6:	80 e3       	ldi	r24, 0x30	; 48
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	68 d0       	rcall	.+208    	; 0x68c <fputc>
 5bc:	a2 fe       	sbrs	r10, 2
 5be:	16 c0       	rjmp	.+44     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5c0:	a1 fc       	sbrc	r10, 1
 5c2:	03 c0       	rjmp	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	88 e7       	ldi	r24, 0x78	; 120
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	88 e5       	ldi	r24, 0x58	; 88
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	b6 01       	movw	r22, r12
 5d0:	0c c0       	rjmp	.+24     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d2:	8a 2d       	mov	r24, r10
 5d4:	86 78       	andi	r24, 0x86	; 134
 5d6:	51 f0       	breq	.+20     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5d8:	a1 fe       	sbrs	r10, 1
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5dc:	8b e2       	ldi	r24, 0x2B	; 43
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5e0:	80 e2       	ldi	r24, 0x20	; 32
 5e2:	a7 fc       	sbrc	r10, 7
 5e4:	8d e2       	ldi	r24, 0x2D	; 45
 5e6:	b6 01       	movw	r22, r12
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	50 d0       	rcall	.+160    	; 0x68c <fputc>
 5ec:	89 14       	cp	r8, r9
 5ee:	30 f4       	brcc	.+12     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e3       	ldi	r24, 0x30	; 48
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	4a d0       	rcall	.+148    	; 0x68c <fputc>
 5f8:	9a 94       	dec	r9
 5fa:	f8 cf       	rjmp	.-16     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5fc:	8a 94       	dec	r8
 5fe:	f3 01       	movw	r30, r6
 600:	e8 0d       	add	r30, r8
 602:	f1 1d       	adc	r31, r1
 604:	80 81       	ld	r24, Z
 606:	b6 01       	movw	r22, r12
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	40 d0       	rcall	.+128    	; 0x68c <fputc>
 60c:	81 10       	cpse	r8, r1
 60e:	f6 cf       	rjmp	.-20     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 610:	22 20       	and	r2, r2
 612:	09 f4       	brne	.+2      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 614:	4e ce       	rjmp	.-868    	; 0x2b2 <vfprintf+0x4c>
 616:	b6 01       	movw	r22, r12
 618:	80 e2       	ldi	r24, 0x20	; 32
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	37 d0       	rcall	.+110    	; 0x68c <fputc>
 61e:	2a 94       	dec	r2
 620:	f7 cf       	rjmp	.-18     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 622:	f6 01       	movw	r30, r12
 624:	86 81       	ldd	r24, Z+6	; 0x06
 626:	97 81       	ldd	r25, Z+7	; 0x07
 628:	02 c0       	rjmp	.+4      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62a:	8f ef       	ldi	r24, 0xFF	; 255
 62c:	9f ef       	ldi	r25, 0xFF	; 255
 62e:	2b 96       	adiw	r28, 0x0b	; 11
 630:	0f b6       	in	r0, 0x3f	; 63
 632:	f8 94       	cli
 634:	de bf       	out	0x3e, r29	; 62
 636:	0f be       	out	0x3f, r0	; 63
 638:	cd bf       	out	0x3d, r28	; 61
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	ff 90       	pop	r15
 644:	ef 90       	pop	r14
 646:	df 90       	pop	r13
 648:	cf 90       	pop	r12
 64a:	bf 90       	pop	r11
 64c:	af 90       	pop	r10
 64e:	9f 90       	pop	r9
 650:	8f 90       	pop	r8
 652:	7f 90       	pop	r7
 654:	6f 90       	pop	r6
 656:	5f 90       	pop	r5
 658:	4f 90       	pop	r4
 65a:	3f 90       	pop	r3
 65c:	2f 90       	pop	r2
 65e:	08 95       	ret

00000660 <strnlen_P>:
 660:	fc 01       	movw	r30, r24
 662:	05 90       	lpm	r0, Z+
 664:	61 50       	subi	r22, 0x01	; 1
 666:	70 40       	sbci	r23, 0x00	; 0
 668:	01 10       	cpse	r0, r1
 66a:	d8 f7       	brcc	.-10     	; 0x662 <strnlen_P+0x2>
 66c:	80 95       	com	r24
 66e:	90 95       	com	r25
 670:	8e 0f       	add	r24, r30
 672:	9f 1f       	adc	r25, r31
 674:	08 95       	ret

00000676 <strnlen>:
 676:	fc 01       	movw	r30, r24
 678:	61 50       	subi	r22, 0x01	; 1
 67a:	70 40       	sbci	r23, 0x00	; 0
 67c:	01 90       	ld	r0, Z+
 67e:	01 10       	cpse	r0, r1
 680:	d8 f7       	brcc	.-10     	; 0x678 <strnlen+0x2>
 682:	80 95       	com	r24
 684:	90 95       	com	r25
 686:	8e 0f       	add	r24, r30
 688:	9f 1f       	adc	r25, r31
 68a:	08 95       	ret

0000068c <fputc>:
 68c:	0f 93       	push	r16
 68e:	1f 93       	push	r17
 690:	cf 93       	push	r28
 692:	df 93       	push	r29
 694:	fb 01       	movw	r30, r22
 696:	23 81       	ldd	r18, Z+3	; 0x03
 698:	21 fd       	sbrc	r18, 1
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <fputc+0x16>
 69c:	8f ef       	ldi	r24, 0xFF	; 255
 69e:	9f ef       	ldi	r25, 0xFF	; 255
 6a0:	2c c0       	rjmp	.+88     	; 0x6fa <fputc+0x6e>
 6a2:	22 ff       	sbrs	r18, 2
 6a4:	16 c0       	rjmp	.+44     	; 0x6d2 <fputc+0x46>
 6a6:	46 81       	ldd	r20, Z+6	; 0x06
 6a8:	57 81       	ldd	r21, Z+7	; 0x07
 6aa:	24 81       	ldd	r18, Z+4	; 0x04
 6ac:	35 81       	ldd	r19, Z+5	; 0x05
 6ae:	42 17       	cp	r20, r18
 6b0:	53 07       	cpc	r21, r19
 6b2:	44 f4       	brge	.+16     	; 0x6c4 <fputc+0x38>
 6b4:	a0 81       	ld	r26, Z
 6b6:	b1 81       	ldd	r27, Z+1	; 0x01
 6b8:	9d 01       	movw	r18, r26
 6ba:	2f 5f       	subi	r18, 0xFF	; 255
 6bc:	3f 4f       	sbci	r19, 0xFF	; 255
 6be:	31 83       	std	Z+1, r19	; 0x01
 6c0:	20 83       	st	Z, r18
 6c2:	8c 93       	st	X, r24
 6c4:	26 81       	ldd	r18, Z+6	; 0x06
 6c6:	37 81       	ldd	r19, Z+7	; 0x07
 6c8:	2f 5f       	subi	r18, 0xFF	; 255
 6ca:	3f 4f       	sbci	r19, 0xFF	; 255
 6cc:	37 83       	std	Z+7, r19	; 0x07
 6ce:	26 83       	std	Z+6, r18	; 0x06
 6d0:	14 c0       	rjmp	.+40     	; 0x6fa <fputc+0x6e>
 6d2:	8b 01       	movw	r16, r22
 6d4:	ec 01       	movw	r28, r24
 6d6:	fb 01       	movw	r30, r22
 6d8:	00 84       	ldd	r0, Z+8	; 0x08
 6da:	f1 85       	ldd	r31, Z+9	; 0x09
 6dc:	e0 2d       	mov	r30, r0
 6de:	09 95       	icall
 6e0:	89 2b       	or	r24, r25
 6e2:	e1 f6       	brne	.-72     	; 0x69c <fputc+0x10>
 6e4:	d8 01       	movw	r26, r16
 6e6:	16 96       	adiw	r26, 0x06	; 6
 6e8:	8d 91       	ld	r24, X+
 6ea:	9c 91       	ld	r25, X
 6ec:	17 97       	sbiw	r26, 0x07	; 7
 6ee:	01 96       	adiw	r24, 0x01	; 1
 6f0:	17 96       	adiw	r26, 0x07	; 7
 6f2:	9c 93       	st	X, r25
 6f4:	8e 93       	st	-X, r24
 6f6:	16 97       	sbiw	r26, 0x06	; 6
 6f8:	ce 01       	movw	r24, r28
 6fa:	df 91       	pop	r29
 6fc:	cf 91       	pop	r28
 6fe:	1f 91       	pop	r17
 700:	0f 91       	pop	r16
 702:	08 95       	ret

00000704 <__ultoa_invert>:
 704:	fa 01       	movw	r30, r20
 706:	aa 27       	eor	r26, r26
 708:	28 30       	cpi	r18, 0x08	; 8
 70a:	51 f1       	breq	.+84     	; 0x760 <__ultoa_invert+0x5c>
 70c:	20 31       	cpi	r18, 0x10	; 16
 70e:	81 f1       	breq	.+96     	; 0x770 <__ultoa_invert+0x6c>
 710:	e8 94       	clt
 712:	6f 93       	push	r22
 714:	6e 7f       	andi	r22, 0xFE	; 254
 716:	6e 5f       	subi	r22, 0xFE	; 254
 718:	7f 4f       	sbci	r23, 0xFF	; 255
 71a:	8f 4f       	sbci	r24, 0xFF	; 255
 71c:	9f 4f       	sbci	r25, 0xFF	; 255
 71e:	af 4f       	sbci	r26, 0xFF	; 255
 720:	b1 e0       	ldi	r27, 0x01	; 1
 722:	3e d0       	rcall	.+124    	; 0x7a0 <__ultoa_invert+0x9c>
 724:	b4 e0       	ldi	r27, 0x04	; 4
 726:	3c d0       	rcall	.+120    	; 0x7a0 <__ultoa_invert+0x9c>
 728:	67 0f       	add	r22, r23
 72a:	78 1f       	adc	r23, r24
 72c:	89 1f       	adc	r24, r25
 72e:	9a 1f       	adc	r25, r26
 730:	a1 1d       	adc	r26, r1
 732:	68 0f       	add	r22, r24
 734:	79 1f       	adc	r23, r25
 736:	8a 1f       	adc	r24, r26
 738:	91 1d       	adc	r25, r1
 73a:	a1 1d       	adc	r26, r1
 73c:	6a 0f       	add	r22, r26
 73e:	71 1d       	adc	r23, r1
 740:	81 1d       	adc	r24, r1
 742:	91 1d       	adc	r25, r1
 744:	a1 1d       	adc	r26, r1
 746:	20 d0       	rcall	.+64     	; 0x788 <__ultoa_invert+0x84>
 748:	09 f4       	brne	.+2      	; 0x74c <__ultoa_invert+0x48>
 74a:	68 94       	set
 74c:	3f 91       	pop	r19
 74e:	2a e0       	ldi	r18, 0x0A	; 10
 750:	26 9f       	mul	r18, r22
 752:	11 24       	eor	r1, r1
 754:	30 19       	sub	r19, r0
 756:	30 5d       	subi	r19, 0xD0	; 208
 758:	31 93       	st	Z+, r19
 75a:	de f6       	brtc	.-74     	; 0x712 <__ultoa_invert+0xe>
 75c:	cf 01       	movw	r24, r30
 75e:	08 95       	ret
 760:	46 2f       	mov	r20, r22
 762:	47 70       	andi	r20, 0x07	; 7
 764:	40 5d       	subi	r20, 0xD0	; 208
 766:	41 93       	st	Z+, r20
 768:	b3 e0       	ldi	r27, 0x03	; 3
 76a:	0f d0       	rcall	.+30     	; 0x78a <__ultoa_invert+0x86>
 76c:	c9 f7       	brne	.-14     	; 0x760 <__ultoa_invert+0x5c>
 76e:	f6 cf       	rjmp	.-20     	; 0x75c <__ultoa_invert+0x58>
 770:	46 2f       	mov	r20, r22
 772:	4f 70       	andi	r20, 0x0F	; 15
 774:	40 5d       	subi	r20, 0xD0	; 208
 776:	4a 33       	cpi	r20, 0x3A	; 58
 778:	18 f0       	brcs	.+6      	; 0x780 <__ultoa_invert+0x7c>
 77a:	49 5d       	subi	r20, 0xD9	; 217
 77c:	31 fd       	sbrc	r19, 1
 77e:	40 52       	subi	r20, 0x20	; 32
 780:	41 93       	st	Z+, r20
 782:	02 d0       	rcall	.+4      	; 0x788 <__ultoa_invert+0x84>
 784:	a9 f7       	brne	.-22     	; 0x770 <__ultoa_invert+0x6c>
 786:	ea cf       	rjmp	.-44     	; 0x75c <__ultoa_invert+0x58>
 788:	b4 e0       	ldi	r27, 0x04	; 4
 78a:	a6 95       	lsr	r26
 78c:	97 95       	ror	r25
 78e:	87 95       	ror	r24
 790:	77 95       	ror	r23
 792:	67 95       	ror	r22
 794:	ba 95       	dec	r27
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0x86>
 798:	00 97       	sbiw	r24, 0x00	; 0
 79a:	61 05       	cpc	r22, r1
 79c:	71 05       	cpc	r23, r1
 79e:	08 95       	ret
 7a0:	9b 01       	movw	r18, r22
 7a2:	ac 01       	movw	r20, r24
 7a4:	0a 2e       	mov	r0, r26
 7a6:	06 94       	lsr	r0
 7a8:	57 95       	ror	r21
 7aa:	47 95       	ror	r20
 7ac:	37 95       	ror	r19
 7ae:	27 95       	ror	r18
 7b0:	ba 95       	dec	r27
 7b2:	c9 f7       	brne	.-14     	; 0x7a6 <__ultoa_invert+0xa2>
 7b4:	62 0f       	add	r22, r18
 7b6:	73 1f       	adc	r23, r19
 7b8:	84 1f       	adc	r24, r20
 7ba:	95 1f       	adc	r25, r21
 7bc:	a0 1d       	adc	r26, r0
 7be:	08 95       	ret

000007c0 <_exit>:
 7c0:	f8 94       	cli

000007c2 <__stop_program>:
 7c2:	ff cf       	rjmp	.-2      	; 0x7c2 <__stop_program>
